#!/bin/sh

# Get parameters
if [ $# -lt 1 ]
then
  echo "USAGE: $0 [register | deregister] \nDefaults to register."
  exit 10
fi
option=${1}

# Confirm Codefresh CLI is installed
if ! command -v cf &> /dev/null 
then
  echo "Install Codefresh CLI. See https://codefresh-io.github.io/cli/installation/"
  exit 20
fi

if ! command -v kubectl &> /dev/null 
then
  echo "Install kubectl"
  exit 30
fi

if [ -z "${CODEFRESH_API_KEY}" ]
then
  echo "CODEFRESH_API_KEY environment variable not set."
  exit 40
fi

if [ -z "${CLUSTER_KUBECONFIG_STRING}" ]
then
  echo "CLUSTER_KUBECONFIG_STRING environment variable not set. Should be the kubeconfig itself."
  exit 50
fi

# Set up KUBECONFIG environment variable for kubectl
export KUBECONFIG=/tmp/kubeconfig
echo ${CLUSTER_KUBECONFIG_STRING} > ${KUBECONFIG}

# delete and recreate context to make sure everything is in synch
cf config delete-context codefresh 2> /dev/null
cf config create-context codefresh --api-key  ${CODEFRESH_API_KEY} 2> /dev/null

# if deregister then remove the cluster from codefresh
if [ $option == "deregister" ]
then
  # find the cluster to disconnect
  server_url=`cf cluster list codefresh-hosted | grep aws | sed 's/  */;/g' | cut -d";" -f1` 
  # disconnect the cluster
  cf cluster remove codefresh-hosted --server-url ${server_url} 2> /dev/null
else # default to register
  # connect the cluster
  cf cluster add codefresh-hosted --context aws 2> /dev/null
fi

